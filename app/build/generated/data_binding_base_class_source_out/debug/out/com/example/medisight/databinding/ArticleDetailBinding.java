// Generated by view binder compiler. Do not edit!
package com.example.medisight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medisight.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ArticleDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final ImageView articleBanner;

  @NonNull
  public final TextView articleDate;

  @NonNull
  public final TextView articleDescription;

  @NonNull
  public final TextView articleTitle;

  @NonNull
  public final TextView articleWriter;

  @NonNull
  public final TextView toolbarTitle;

  @NonNull
  public final MaterialToolbar topAppBar;

  private ArticleDetailBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull ImageView articleBanner, @NonNull TextView articleDate,
      @NonNull TextView articleDescription, @NonNull TextView articleTitle,
      @NonNull TextView articleWriter, @NonNull TextView toolbarTitle,
      @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.articleBanner = articleBanner;
    this.articleDate = articleDate;
    this.articleDescription = articleDescription;
    this.articleTitle = articleTitle;
    this.articleWriter = articleWriter;
    this.toolbarTitle = toolbarTitle;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ArticleDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.article_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ArticleDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.article_banner;
      ImageView articleBanner = ViewBindings.findChildViewById(rootView, id);
      if (articleBanner == null) {
        break missingId;
      }

      id = R.id.article_date;
      TextView articleDate = ViewBindings.findChildViewById(rootView, id);
      if (articleDate == null) {
        break missingId;
      }

      id = R.id.article_description;
      TextView articleDescription = ViewBindings.findChildViewById(rootView, id);
      if (articleDescription == null) {
        break missingId;
      }

      id = R.id.article_title;
      TextView articleTitle = ViewBindings.findChildViewById(rootView, id);
      if (articleTitle == null) {
        break missingId;
      }

      id = R.id.article_writer;
      TextView articleWriter = ViewBindings.findChildViewById(rootView, id);
      if (articleWriter == null) {
        break missingId;
      }

      id = R.id.toolbarTitle;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new ArticleDetailBinding((CoordinatorLayout) rootView, appBar, articleBanner,
          articleDate, articleDescription, articleTitle, articleWriter, toolbarTitle, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
