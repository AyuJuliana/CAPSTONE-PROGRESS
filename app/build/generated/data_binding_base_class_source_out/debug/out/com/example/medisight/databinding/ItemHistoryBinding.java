// Generated by view binder compiler. Do not edit!
package com.example.medisight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.medisight.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView historyDescription;

  @NonNull
  public final ShapeableImageView historyImage;

  @NonNull
  public final TextView historyTitle;

  @NonNull
  public final ImageView trash;

  private ItemHistoryBinding(@NonNull CardView rootView, @NonNull CardView cardView,
      @NonNull TextView historyDescription, @NonNull ShapeableImageView historyImage,
      @NonNull TextView historyTitle, @NonNull ImageView trash) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.historyDescription = historyDescription;
    this.historyImage = historyImage;
    this.historyTitle = historyTitle;
    this.trash = trash;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView cardView = (CardView) rootView;

      id = R.id.history_description;
      TextView historyDescription = ViewBindings.findChildViewById(rootView, id);
      if (historyDescription == null) {
        break missingId;
      }

      id = R.id.history_image;
      ShapeableImageView historyImage = ViewBindings.findChildViewById(rootView, id);
      if (historyImage == null) {
        break missingId;
      }

      id = R.id.history_title;
      TextView historyTitle = ViewBindings.findChildViewById(rootView, id);
      if (historyTitle == null) {
        break missingId;
      }

      id = R.id.trash;
      ImageView trash = ViewBindings.findChildViewById(rootView, id);
      if (trash == null) {
        break missingId;
      }

      return new ItemHistoryBinding((CardView) rootView, cardView, historyDescription, historyImage,
          historyTitle, trash);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
